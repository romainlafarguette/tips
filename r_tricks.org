#+TITLE:     Tips for R
#+AUTHOR:    Romain Lafarguette
#+EMAIL:     rlafarguette@imf.org


* Manipulations: loops, strings, etc.
** Lists
#+begin_src R
mylist = c(1,2,3)
#+end_src
** Loop in R with list container
#+begin_src R
summary_list <- list() # Initialize the list
for (ftau in ql){
    res = rq(formula=y_form, data=dfc, tau=ql, R=yR, r=yr, method="fnc")
    summary = summary.rq(res, se='boot')
    coeffs = summary$coefficients
    tcoeffs = cbind(tau=ftau, coeffs)
    summary_list[[glue('{ftau}')]] <- tcoeffs
}
#+end_src

** Equivalent of fstring in R
#+begin_src R
library(glue)
myname = 'Romain'
glue('My name is {myname}')
#+end_src
** Eval string expression
#+begin_src R
mylist = c(1,2,3)
eval(parse(text='mylist'))
#+end_src

** Manipulate paths
#+begin_src R
file.path('data', 'clean', 'step_005_coeff_frame_capital_constrained.csv')
#+end_src

* Data frames
** Sort
#+begin_src R
### Sort dataframes on two variables
dn = dn[with(dn, order(country, date_m)), ] ## Order the frame
#+end_src

** Add a column at the beginning of the dataframe
#+begin_src R
### Add a column at the beginning of the dataframe
cbind(tau=0.05, dataframe)
#+end_src

** Concatenate a list of dataframes
#+begin_src R
do.call(rbind, summary_list)
#+end_src

** Lag a variable
#+begin_src R
## Lag a variable
library(Hmisc) # For the Lag function
dft$output_gap_lag_h = Lag(df$output_gap, horizon)
#+end_src

** Change columns and rows names
#+begin_src R
colnames(fci_coeffs_mat)[colnames(fci_coeffs_mat)=='(Intercept)'] = "Intercept"
rownames(fci_coeffs_mat) = gsub('tau= ', '', rownames(fci_coeffs_mat))
#+end_src 

** Sub-select variables and remove rows with missing values
#+begin_src R
main_var_l <- c("economic_activity", "inflation", "exchange_rate_yoy")
df = na.omit(df[main_var_l])
#+end_src 

** Load dataframes similarly as pandas
#+begin_src R
library(foreign)

df <- read.csv(file='data/clean/step_002_ecb_clean.csv',
               stringsAsFactors=FALSE)
df$date <- as.Date(df$date,format="%Y-%m-%d")
rownames(df) <- df$date
#+end_src

* Formulas
** Regress on all remaining variables
#+begin_src R
### Trick: "." in a formula means all remaining variables
fit_lp = selm(cbind(output_gap, inflation, exchange_rate) ~ .,
              family="ST", data=dft)
#+end_src

* Dates management
** Add months to a date
#+begin_src R
library(lubridate)
cond_date = ymd(rownames(cond_vector))
proj_date = cond_date %m+% months(horizon)
#+end_src

* Object inspection
** Object Type in R
#+begin_src R
typeof(thistruc)
#+end_src
** Inspect an object in R
#+begin_src R
names(object) # List of objects
object$attribute # Access the attribute within object
#+end_src
** Eval name to pass to a function
#+begin_src R
deparse(substitute(group_list))
#+end_src

* Emacs related issues
** Weird behaviour of comments in Emacs
Use ### instead of #
### Left align comments
## Block align comments
One is right-align comments

https://stackoverflow.com/questions/54755899/disable-ess-fancy-comments-with-r

* Install packages
#+begin_src R
install.packages('forecast', repos='http://cran.us.r-project.org')
#+end_src
